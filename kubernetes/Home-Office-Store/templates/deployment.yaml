---
# Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.backend.name }}
  labels:
    app: backend
    {{- include "Home-Office-Store.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicas }}
  selector:
    matchLabels:
      app: backend
      {{- include "Home-Office-Store.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: backend
        {{- include "Home-Office-Store.labels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ .Values.backend.flaskBackend.name }}
        image: "{{ .Values.backend.flaskBackend.image }}:{{ .Values.backend.flaskBackend.imageTag }}"
        ports:
        - containerPort: {{ .Values.backend.flaskBackend.port }}
        env:
        - name: N8N_WEBHOOK_URL 
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.cm.name }}
              key: n8n_webhook_url
        - name: CORS_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.cm.name }}
              key: cors_origins
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.cm.name }}
              key: db_host
        - name: DB_PORT 
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.cm.name }}
              key: db_port
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.cm.name }}
              key: db_name
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.name }}
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.name }}
              key: db_password
        {{- include "Home-Office-Store.backend.resources" . | nindent 8 }}
        livenessProbe:
          httpGet:
            path: /api/health
            port: {{ .Values.backend.flaskBackend.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/health
            port: {{ .Values.backend.flaskBackend.port }}
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 30
      initContainers:
      - name: db-wait
        image: busybox:1.35
        command:
        - sh
        - -c
        - |
          until nc -z ${DB_HOST} ${DB_PORT}; do
            echo "Waiting for database to be ready..."
            sleep 2
          done
          echo "Database is ready!"
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.cm.name }}
              key: db_host
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.cm.name }}
              key: db_port

---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.frontend.name }}
  labels:
    app: frontend
    {{- include "Home-Office-Store.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.frontend.replicas }}
  selector:
    matchLabels:
      app: frontend
      {{- include "Home-Office-Store.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: frontend
        {{- include "Home-Office-Store.labels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ .Values.frontend.reactFrontend.name }}
        image: "{{ .Values.frontend.reactFrontend.image }}:{{ .Values.frontend.reactFrontend.imageTag }}"
        ports:
        - containerPort: {{ .Values.frontend.reactFrontend.port }}
        env:
        # - name: NEXT_PUBLIC_API_URL
        #   valueFrom:
        #     configMapKeyRef:
        #       name: {{ .Values.cm.name }}
        #       key: backend_svc
        - name: NODE_ENV
          value: development
        {{- include "Home-Office-Store.frontend.resources" . | nindent 8 }}
        livenessProbe:
          httpGet:
            path: /index.html
            port: {{ .Values.frontend.reactFrontend.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /index.html
            port: {{ .Values.frontend.reactFrontend.port }}
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30

---
# N8N Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.n8n.name }}
  labels:
    app: n8n
    {{- include "Home-Office-Store.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.n8n.replicas }}
  selector:
    matchLabels:
      app: n8n
      {{- include "Home-Office-Store.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: n8n
        {{- include "Home-Office-Store.labels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ .Values.n8n.n8n.name }}
        image: "{{ .Values.n8n.n8n.image }}:{{ .Values.n8n.n8n.imageTag }}"
        ports:
        - containerPort: {{ .Values.n8n.n8n.port }}
        env:
        - name: DB_POSTGRESDB_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.cm.name }}
              key: db_host
        - name: DB_POSTGRESDB_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.cm.name }}
              key: db_port
        - name: DB_POSTGRESDB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.cm.name }}
              key: db_name
        - name: DB_POSTGRESDB_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.name }}
              key: db_user
        - name: DB_POSTGRESDB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.name }}
              key: db_password
        - name: N8N_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.name }}
              key: n8n_api_key
        - name: N8N_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.name }}
              key: n8n_encryption_key
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secrets.name }}
              key: open_ai_api_key
        envFrom:
        - configMapRef:
            name: {{ .Values.n8nCm.envn8n.name }}
        {{- include "Home-Office-Store.n8n.resources" . | nindent 8 }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.n8n.n8n.port }}
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.n8n.n8n.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30